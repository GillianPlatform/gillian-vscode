
// === EXERCISE 1 ===
// Welcome to the Gillian lab! These exercises aim to introduce you to Gillian
// and its underlying Compositional Symbolic Execution principles.
//
// This program already verifies just fine; take it as an opportunity to get
// familiar with the tool (and make sure everything is installed correctly!)
// Some things to try:
//   (a) Change the code below; the language server should quickly highlight any
//       mistakes, including syntax errors and verification failures.
//   (b) Start the debugger by clicking "Debug signum" just above where the
//       function is declared.
//       You can step through the code using normal debugging controls, as well
//       as Gillian's bespoke debugging interface.
//       Make sure you keep an eye on the current state in the "Run" tab!

{ isInt(x) }
function signum(x) {
  if (x > 0) {
    s := 1
  } else {
    if (x < 0) {
      s := 0-1
    } else {
      s := 0
    }
  };
  return s
}
{ emp }

// TODO: is there a nicer way of writing this?
predicate isInt(x : Int) {
  emp
}
